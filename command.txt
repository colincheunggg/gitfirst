git --global user.name "colin"
git --global user.email "colincheunggg@gmail.com"
git init
git add readme.txt
git commit -m "wrote a readme file"
git add file1.txt
git add file2.txt file3.txt
git commit -m "add 3 files"
git status
git diff readme.txt
git add readme.txt
git status
git commit -m "add distributed"
git status
git log
q
git log --pretty=oneline
git reset -hard HEAD~1
git log
git reset -hard 050764
git add readme.txt lisence.txt
git commit -m "understand how stage works"
git add readme.txt
git status
git commit -m "git trackes changes"
git status
git diff HEAD -- readme.txt
git add readme.txt
git commit -m "git trackes changes rather than files"
git add readme.txt
git checkout -- readme.txt
git add readme.txt
git checkout -- readme.txt
git reset HEAD readme.txt
git checkout -- file3.txt
git rm file3.txt
git commit -m "delete file3.txt"

generate ssh key
git bash:ssh-genkey -t rsa -C "youremail"
add id_rsa.pub to github
git remote add origin git@github.com:youremail/yourrepository.git
git push origin -u master

clone repository from remote
git clone git@github.com:youremail/remoterepository.git

branch
git branch
git branch dev
git checkout dev
git branch
git add readme.txt
git commit -m "new branch dev"
git log --pretty:oneline
git checkout master
git merge dev
git branch -d dev
git branch
git log --pretty:oneline

merge
git checkout -b feature1
git add readme.txt
git commit -m "you and me"
git checkout master
git add readme.txt
git commit -m "you & me"
git merge feature1
git add readme.txt
git commit -m "confilicts fixed"

no fast forward
git checkout -b dev
git add readme.txt
git commit -m "branch dev"
git checkout master
git merge --no-ff -m "no fast forward" dev

stash and bug fix
git stash
git checkout master
git checkout -b bugfix
git add readme.txt
git commit -m "bugfix bug fixed"
git checkout master
git merge --no-ff -m "merge with bugfix" bugfix
git checkout dev
git stash list
git stash apply stash@{0}
git add readme.txt
git commit -m "dev work finished"
git stash drop stash@{0}
git checkout master
git merge dev
git add readme.txt
git commit -m "merge with dev"

force delete a branch which is not merged
git branch -D feature1

tag
git tag v1.0
git tag v1.1 4b15ac
git tag -a v2.0 -m "add zhibo" 4b15ac
git tag
git show v1.0
git push origin v1.0
git push origin --tags
git tag -d v1.1
git push origin :refs/tags/v1.1